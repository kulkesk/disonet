#[
    Это пример модуля, написанного на nim.
    Он читает из стандартного ввода информацию,
    распознает что имелось ввиду и выполняет команды.
    Результаты помещаются в стандартный вывод.

    На базе этой заготовки можно создавать модули
    любой сложности.

    Запустите программу и поочередно вводите:

    dd ee
    gg hh jj
    kk
    cmd stop

    Это означает что мы подготавливаем данные для команды stop,
    сохраняя их в виде ключ=значение.
    Ключом является первое слово до пробела,
    а значением является строка после пробела, включая все остальные пробелы.

    Вы увидите что все вводимые данные накапливаются в таблице data.
    Как только поступит команда stop, модуль завершит свою работу.
    Команды могут быть произвольными и они могут использовать накопленные данные.
    По завершению, команда может очистить данные или оставить для дальнейшего использования.
]#

import strutils
import tables

# Эта переменная будет накапливать входящие данные
var data = init_table[ string, string ]()

while true:

    # Считываем очередную строку
    var line = read_line( stdin )

    # Разбиваем строку на команду и параметры
    var cmd_arg = line.split( " ", maxsplit = 1 )

    # Добавляем аргументы если их нет
    if cmd_arg.len < 2:
        cmd_arg.add( "" )

    # Сохраняем полученные данные в таблице data
    data[ cmd_arg[0] ] = cmd_arg[1]

    # Отображаем таблицу
    echo data

    # Обрабатываем поступившие команды
    if data.has_key( "cmd" ):

        case data["cmd"]:

        of "stop":

            # Удаляем саму команду из таблицы
            data.del( "cmd" )

            # Отображаем таблицу
            echo data

            # Прерываем цикл обработки входящих данных
            break



    